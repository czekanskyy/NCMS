generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model nc_comments {
  id        String   @id @default(uuid())
  author    String?  @default("Anonim")
  content   String
  post      nc_posts @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
}

model nc_posts {
  id          String        @id @default(uuid())
  title       String
  content     String?
  thumbnail   String?
  author      nc_users      @relation(fields: [authorId], references: [id])
  authorId    String
  views       Int           @default(0)
  isPublished Boolean       @default(false)
  tags        nc_tags[]
  comments    nc_comments[]
  createdAt   DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime      @updatedAt @db.Timestamptz(6)
}

enum nc_roles {
  USER
  AUTHOR
  ADMIN
}

model nc_site_config {
  id          String   @id @default(uuid())
  name        String
  description String?
  keywords    String?
  favicon     String?
  owner       nc_users @relation(fields: [ownerId], references: [id])
  ownerId     String   @unique
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)
}

model nc_tags {
  id        String     @id @default(uuid())
  name      String     @unique
  views     Int        @default(0)
  posts     nc_posts[]
  createdAt DateTime   @default(now()) @db.Timestamptz(6)
}

model nc_users {
  id           String          @id @default(uuid())
  username     String          @unique
  password     String
  fullName     String
  email        String          @unique
  phone        String?         @unique
  bio          String?
  picture      String?
  role         nc_roles        @default(USER)
  writtenPosts nc_posts[]
  siteConfig   nc_site_config?
  createdAt    DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime        @updatedAt @db.Timestamptz(6)
}
